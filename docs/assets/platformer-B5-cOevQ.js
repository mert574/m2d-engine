var M=Object.defineProperty;var A=(a,i,t)=>i in a?M(a,i,{enumerable:!0,configurable:!0,writable:!0,value:t}):a[i]=t;var c=(a,i,t)=>A(a,typeof i!="symbol"?i+"":i,t);import{M as h,C as p,K as k,a as P,b as T,c as D,d as E,e as H,f as F,_ as w}from"./m2d-BASberjS.js";class u{constructor(i,t,e){c(this,"name","Entity");if(!i)throw new Error("Physics body is required");if(!e)throw new Error("Game instance is required");this.body=i,this.sprite=t,this.game=e,this.constraints=new Map,this.currentAnim=null,this.dead=!1,this.size={x:i.bounds.max.x-i.bounds.min.x,y:i.bounds.max.y-i.bounds.min.y},this._contacts=new Set}addConstraint(i,t){this.constraints.set(i,t)}getConstraint(i){return this.constraints.get(i)}onCollisionStart(i){this._contacts.add(i);for(const t of this.constraints.values())t.onCollisionStart(i)}onCollisionEnd(i){this._contacts.delete(i);for(const t of this.constraints.values())t.onCollisionEnd(i)}update(i){if(!this.dead)for(const t of this.constraints.values())t.update(i)}draw(i){if(this.dead)return;const t=this.body.position;if(!this.sprite||!this.sprite.width){this.game.renderer.drawRect({x:t.x-this.size.x/2,y:t.y-this.size.y/2,width:this.size.x,height:this.size.y,fillStyle:"#ff0000"});return}const e=this.sprite.width,o=Math.ceil(this.size.x/e),n=Math.ceil(this.size.y/e);for(let s=0;s<o;s++)for(let r=0;r<n;r++){const d=t.x-this.size.x/2+s*e+e/2,g=t.y-this.size.y/2+r*e+e/2;this.sprite.draw(this.currentAnim,d,g,{rotation:this.body.angle})}for(const s of this.constraints.values())s.draw(i)}get position(){return this.body.position}get velocity(){return this.body.velocity}setAnimation(i){if(this.sprite){if(!i||!this.sprite.animations){this.currentAnim=null;return}this.sprite.animations.has(i)&&(this.currentAnim=i)}}isFalling(i=.5){return this.velocity.y>i}isJumping(i=-.5){return this.velocity.y<i}isMovingHorizontally(i=.1){return Math.abs(this.velocity.x)>i}isMovingLeft(i=.1){return this.velocity.x<-i}isMovingRight(i=.1){return this.velocity.x>i}isInAir(){return!this.isOnGround()}isOnGround(){const i=this.game.engine.world,t=h.Query.collides(this.body,h.Composite.allBodies(i));for(const{bodyA:e,bodyB:o}of t){const n=e===this.body?o:e;if(!n.entity||n.entity.name!=="Platform")continue;const s=n.position.y-this.position.y;if(s>0&&Math.abs(s)<this.size.y)return!0}return!1}}class z extends u{constructor(t,e,o,n={}){var s,r,d;t.isStatic=!0,t.friction=1,t.frictionStatic=1,t.restitution=0;super(t,e,o);c(this,"name","MovingPlatform");this.points=((s=n.path)==null?void 0:s.points)||[],this.speed=((r=n.path)==null?void 0:r.speed)||3,this.waitTime=((d=n.path)==null?void 0:d.waitTime)||1e3,this.currentPoint=0,this.waiting=!1,this.waitStart=0,this.lastPosition=this.points[0]?{...this.points[0]}:{x:t.position.x,y:t.position.y},this.ridingEntities=new Set,this.points.length>0&&h.Body.setPosition(this.body,this.points[0])}onCollisionStart(t){super.onCollisionStart(t),t.position.y<this.position.y&&Math.abs(t.position.x-this.position.x)<this.size.x/2+t.bounds.max.x-t.bounds.min.x/2&&this.ridingEntities.add(t)}onCollisionEnd(t){super.onCollisionEnd(t),this.ridingEntities.delete(t)}update(t){if(this.points.length<2)return;if(this.waiting){Date.now()-this.waitStart>=this.waitTime&&(this.waiting=!1,this.currentPoint=(this.currentPoint+1)%this.points.length);return}const e=this.points[this.currentPoint],o=e.x-this.body.position.x,n=e.y-this.body.position.y,s=Math.sqrt(o*o+n*n);if(s<1){this.waiting=!0,this.waitStart=Date.now(),h.Body.setPosition(this.body,e);return}const r=Math.min(this.speed*t,s),d=o/s*r,g=n/s*r;this.lastPosition={x:this.body.position.x,y:this.body.position.y},h.Body.setPosition(this.body,{x:this.body.position.x+d,y:this.body.position.y+g});const S={x:this.body.position.x-this.lastPosition.x,y:this.body.position.y-this.lastPosition.y};for(const f of this.ridingEntities)f.entity&&h.Body.translate(f,S)}}class m{constructor(i){this.entity=i}update(){}onCollisionStart(i){}onCollisionEnd(i){}draw(){}}class C extends m{constructor(i,t={}){super(i),this.maxHealth=t.maxHealth||100,this.currentHealth=this.maxHealth,this.invulnerableTime=0,this.invulnerableDuration=t.invulnerableDuration||60,this.onDeath=t.onDeath||null,this.onDamage=t.onDamage||null}update(){this.invulnerableTime>0&&this.invulnerableTime--}isInvulnerable(){return this.invulnerableTime>0}takeDamage(i){this.isInvulnerable()||(this.currentHealth=Math.max(0,this.currentHealth-i),this.invulnerableTime=this.invulnerableDuration,this.onDamage&&this.onDamage(i),this.currentHealth===0&&(this.entity.dead=!0,this.onDeath&&this.onDeath()))}heal(i){this.currentHealth=Math.min(this.maxHealth,this.currentHealth+i)}draw(){if(this.entity.dead)return;const i=this.entity.position,t=this.entity.size,e=t.x,o=4,n=i.y-t.y/2-10,s=i.x-e/2,r=this.entity.game.renderer.worldContext;r.fillStyle="#333",r.fillRect(s,n,e,o),r.fillStyle=this.currentHealth>30?"#2ecc71":"#e74c3c",r.fillRect(s,n,e*this.healthPercentage,o)}get healthPercentage(){return this.currentHealth/this.maxHealth}get isAlive(){return this.currentHealth>0}}const l={distance(a,i){const t=i.x-a.x,e=i.y-a.y;return Math.sqrt(t*t+e*e)},direction(a,i){return{x:i.x-a.x,y:i.y-a.y}},normalize(a){const i=Math.sqrt(a.x*a.x+a.y*a.y);return i>0?{x:a.x/i,y:a.y/i}:{x:0,y:0}},scale(a,i){return{x:a.x*i,y:a.y*i}}},x={between(a,i){return Math.atan2(i.y-a.y,i.x-a.x)},inHalfCircle(a,i){return i>0?Math.abs(a)<Math.PI/2:Math.abs(a)>Math.PI/2}};class B extends m{constructor(i,t={}){super(i),this.damage=t.damage||10,this.range=t.range||40,this.cooldown=t.cooldown||30,this.knockback=t.knockback||.02,this.onStart=t.onStart,this.isAttacking=!1,this.currentCooldown=0,this.direction=1,this.hits=new Set,this.attackDuration=10,this.attackTime=0,this.attackAnimEndTime=20,this.hitCircle=h.Bodies.circle(0,0,this.range,{isSensor:!0,isStatic:!0,collisionFilter:{category:p.enemy}}),h.Composite.add(this.entity.game.engine.world,this.hitCircle)}update(){this.currentCooldown>0&&this.currentCooldown--,h.Body.setPosition(this.hitCircle,this.entity.position),this.isAttacking&&(this.attackTime++,this.attackTime===1&&this.checkHits(),this.attackTime>=this.attackDuration&&(this.isAttacking=!1,this.attackTime=0),this.attackTime>=this.attackAnimEndTime&&this.entity.currentAnim.includes("attack")&&this.entity.setAnimation("idle"))}checkHits(){const i=h.Query.collides(this.hitCircle,h.Composite.allBodies(this.entity.game.engine.world).filter(t=>t.collisionFilter.category===p.enemy));for(const t of i){const e=t.bodyA===this.hitCircle?t.bodyB:t.bodyA;if(!e.entity||e.entity===this.entity||this.hits.has(e.entity))continue;const o={x:this.entity.position.x+this.direction*this.entity.size.x/2,y:this.entity.position.y},n=x.between(o,e.position);if(x.inHalfCircle(n,this.direction)){this.hits.add(e.entity);const s=e.entity.getConstraint("health");s&&!s.isInvulnerable()&&(s.takeDamage(this.damage),h.Body.applyForce(e,e.position,{x:this.direction*.5,y:-.3}))}}}startAttack(i){this.currentCooldown>0||(this.isAttacking=!0,this.direction=i,this.hits.clear(),this.currentCooldown=this.cooldown,this.attackTime=0,this.entity.setAnimation(i>0?"attackRight":"attackLeft"),this.onStart&&this.onStart())}draw(){const i=this.entity.position;this.entity.game.renderer.drawArc({x:i.x,y:i.y,radius:this.range,startAngle:0,endAngle:Math.PI*2,strokeStyle:"rgba(0, 150, 255, 0.3)",fill:!1}),this.isAttacking&&this.entity.game.renderer.drawArc({x:i.x,y:i.y,radius:this.range,startAngle:this.direction>0?-Math.PI/2:Math.PI/2,endAngle:this.direction>0?Math.PI/2:3*Math.PI/2,fillStyle:"rgba(255, 0, 0, 0.2)",strokeStyle:"rgba(255, 0, 0, 0.5)"})}}class v extends m{constructor(i,t={}){super(i),this.options={showBounds:t.showBounds??!0,showCenter:t.showCenter??!0,showVelocity:t.showVelocity??!0,showHealth:t.showHealth??!0,boundsColor:t.boundsColor||"#00ff00",boundsFillColor:t.boundsFillColor||"rgba(0, 255, 0, 0.1)",centerColor:t.centerColor||"#ff0000",textColor:t.textColor||"#00ff00",healthyColor:t.healthyColor||"#00ff00",lowHealthColor:t.lowHealthColor||"#ff0000",lowHealthThreshold:t.lowHealthThreshold||30,font:{size:t.fontSize||"12px",family:t.fontFamily||"monospace"}}}draw(){if(!this.entity.game.renderer.isDebugEnabled())return;const i=this.entity.body.bounds,t=this.entity.game.renderer;this.options.showBounds&&t.drawRect({x:i.min.x,y:i.min.y,width:i.max.x-i.min.x,height:i.max.y-i.min.y,strokeStyle:this.options.boundsColor,fillStyle:this.options.boundsFillColor,lineWidth:1}),this.options.showCenter&&t.drawArc({x:this.entity.position.x,y:this.entity.position.y,radius:2,startAngle:0,endAngle:Math.PI*2,fillStyle:this.options.centerColor});let e=i.min.y-50;if(this.options.showVelocity){const o=Math.abs(this.entity.body.velocity.x)<.01?0:this.entity.body.velocity.x,n=Math.abs(this.entity.body.velocity.y)<.01?0:this.entity.body.velocity.y;t.drawText({text:`vel: ${o.toFixed(1)}, ${n.toFixed(1)}`,x:i.min.x,y:e,fillStyle:this.options.textColor,fontSize:this.options.font.size,fontFamily:this.options.font.family,textAlign:"left",textBaseline:"top"}),e-=15}if(this.options.showHealth){const o=this.entity.getConstraint("health");o&&(t.drawText({text:`hp: ${o.currentHealth}/${o.maxHealth}`,x:i.min.x,y:e,fillStyle:o.currentHealth>this.options.lowHealthThreshold?this.options.healthyColor:this.options.lowHealthColor,fontSize:this.options.font.size,fontFamily:this.options.font.family,textAlign:"left",textBaseline:"top"}),e-=15)}}setOption(i,t){i in this.options&&(this.options[i]=t)}}const b=Math.sqrt(2);class _ extends m{constructor(i,t={}){var e,o,n,s;super(i),this.keys={left:k,right:P,up:T,down:D,jump:E,attack:H,...t.keys},this.moveForce=t.moveForce||.01,this.maxSpeed=t.maxSpeed||5,this.continuous=t.continuous??!0,this.verticalMovement=t.verticalMovement??!0,Object.values(this.keys).forEach(r=>{this.entity.game.keys.addKey(r)}),this.onMove=(e=t.onMove)==null?void 0:e.bind(i),this.onDirectionChange=(o=t.onDirectionChange)==null?void 0:o.bind(i),this.onJump=(n=t.onJump)==null?void 0:n.bind(i),this.onAttack=(s=t.onAttack)==null?void 0:s.bind(i)}update(){var o,n;if(this.entity.dead)return;const i=this.entity.game.keys.pressedKeys();let t=0,e=0;if(i.has(this.keys.left)&&(t-=1),i.has(this.keys.right)&&(t+=1),this.verticalMovement&&(i.has(this.keys.up)&&(e-=1),i.has(this.keys.down)&&(e+=1)),t!==0&&e!==0&&(t/=b,e/=b),(t!==0||e!==0)&&(this.continuous?h.Body.applyForce(this.entity.body,this.entity.position,{x:t*this.moveForce,y:e*this.moveForce}):h.Body.setVelocity(this.entity.body,{x:t*this.maxSpeed,y:e*this.maxSpeed})),this.onDirectionChange&&t!==0&&this.onDirectionChange(t>0?1:-1),this.onMove&&this.onMove(t,e),i.has(this.keys.jump)&&((o=this.onJump)==null||o.call(this)),i.has(this.keys.attack)&&((n=this.onAttack)==null||n.call(this)),this.continuous){const s=this.entity.velocity,r=Math.abs(s.x);if(r>this.maxSpeed){const d=this.maxSpeed/r;h.Body.setVelocity(this.entity.body,{x:s.x*d,y:s.y})}}}}class I extends u{constructor(t,e,o,n={}){super(t,e,o);c(this,"name","Player");h.Body.setMass(t,1),this.jumpForce=.133,this.facingDirection=1,this.setAnimation("idle"),this.groundContacts=new Set,this.addConstraint("health",new C(this,{maxHealth:100,onDeath:()=>{console.log("Game Over!"),this.game.gameOver()},onDamage:s=>{console.log(`Player took ${s} damage!`),this.game.soundManager.playSound("damage")}})),this.addConstraint("attack",new B(this,{damage:65,range:50,cooldown:60,onStart:()=>{this.game.soundManager.playSound("attack")}})),this.addConstraint("control",new _(this,{moveForce:.006,maxSpeed:3,continuous:!0,verticalMovement:!1,onMove:(s,r)=>{s!==0?this.setAnimation("run"):this.setAnimation("idle")},onDirectionChange:s=>{this.facingDirection=s},onJump:()=>{this.isOnGround()&&(h.Body.applyForce(this.body,this.position,{x:0,y:-this.jumpForce}),this.setAnimation("jump"),this.game.soundManager.playSound("jump"))},onAttack:()=>{const s=this.getConstraint("attack");s&&s.startAttack(this.facingDirection)}})),this.addConstraint("debug",new v(this,{boundsColor:"#00ff00",boundsFillColor:"rgba(0, 255, 0, 0.1)",centerColor:"#ff0000",textColor:"#00ff00",healthyColor:"#00ff00",lowHealthColor:"#ff0000"}))}onCollisionStart(t){var e,o,n,s;if(super.onCollisionStart(t),((e=t.entity)==null?void 0:e.name)==="Coin"&&this.game.soundManager.playSound("coin"),t.position.y>this.position.y+this.size.y/2&&(((o=t.entity)==null?void 0:o.name)==="Platform"||((n=t.entity)==null?void 0:n.name)==="MovingPlatform")&&this.groundContacts.add(t.id),((s=t.entity)==null?void 0:s.name)==="Bee"){const r=this.getConstraint("health");r&&r.takeDamage(33)}}onCollisionEnd(t){super.onCollisionEnd(t),this.groundContacts.delete(t.id)}isOnGround(){return this.groundContacts.size>0}draw(){super.draw(),this.game.renderer.isDebugEnabled()&&(this.game.renderer.drawLine({x1:this.position.x,y1:this.position.y,x2:this.position.x+20*this.facingDirection,y2:this.position.y,strokeStyle:"#ff0000",lineWidth:1}),this.game.renderer.drawText({text:`ground: ${this.isOnGround()}`,x:this.body.bounds.min.x,y:this.body.bounds.max.y+5,fillStyle:"#00ff00",fontSize:"12px",fontFamily:"monospace",textAlign:"left",textBaseline:"top"}))}}class O extends u{constructor(t,e,o,n={}){t.collisionFilter.category=p.enemy;super(t,e,o);c(this,"name","Bee");this.speed=.5,this.idleSpeed=.3,this.detectionRange=400,this.animTime=0,this.animSpeed=.1,this.setAnimation("idle"),this.damageFlashTime=0,this.damageFlashDuration=10;const s=new C(this,40);s.invulnerableDuration=30,s.onDeath=()=>{this.game.entities.delete(this),h.Composite.remove(this.game.engine.world,this.body)},s.onDamage=()=>{this.damageFlashTime=this.damageFlashDuration,this.setAnimation("idle"),this.game.soundManager.playSound("damage")},this.addConstraint("health",s),this.addConstraint("debug",new v(this,{boundsColor:"#ff6b6b",boundsFillColor:"rgba(255, 107, 107, 0.1)",centerColor:"#ff6b6b",textColor:"#ff9999",healthyColor:"#ff9999",lowHealthColor:"#ff4d4d",lowHealthThreshold:15})),this.targetPoint=this.getNewTargetPoint(),this.targetChangeTime=0,this.targetChangeCooldown=120}getNewTargetPoint(){return{x:this.position.x+(Math.random()*50*2-50),y:this.position.y+(Math.random()*50*2-50)}}update(){if(this.dead||(super.update(),this.damageFlashTime>0&&this.damageFlashTime--,!this.game.player))return;if(l.distance(this.position,this.game.player.position)<this.detectionRange){const e=l.direction(this.position,this.game.player.position),o=l.scale(l.normalize(e),this.speed);h.Body.setVelocity(this.body,o)}else if(this.targetChangeTime++,this.targetChangeTime>=this.targetChangeCooldown&&(this.targetPoint=this.getNewTargetPoint(),this.targetChangeTime=0),l.distance(this.position,this.targetPoint)>1){const o=l.direction(this.position,this.targetPoint),n=l.scale(l.normalize(o),this.idleSpeed);h.Body.setVelocity(this.body,n)}this.animTime+=this.animSpeed,this.animTime>=3&&(this.animTime=0),this.sprite.currentFrame=Math.floor(this.animTime)}draw(){if(!this.dead){if(super.draw(),this.damageFlashTime>0){const t=this.position;this.game.renderer.drawRect({x:t.x-this.size.x/2,y:t.y-this.size.y/2,width:this.size.x,height:this.size.y,fillStyle:"rgba(255, 0, 0, 0.5)"})}this.game.renderer.isDebugEnabled()&&(this.game.renderer.drawArc({x:this.position.x,y:this.position.y,radius:this.detectionRange,startAngle:0,endAngle:Math.PI*2,strokeStyle:"rgba(255, 214, 51, 0.4)",lineWidth:1}),this.game.renderer.drawArc({x:this.targetPoint.x,y:this.targetPoint.y,radius:3,startAngle:0,endAngle:Math.PI*2,fillStyle:"#ffd633"}),this.game.renderer.drawLine({x1:this.position.x,y1:this.position.y,x2:this.targetPoint.x,y2:this.targetPoint.y,strokeStyle:"rgba(255, 214, 51, 0.4)",lineWidth:1}),this.game.renderer.drawText({text:`target: ${this.targetChangeTime}/${this.targetChangeCooldown}`,x:this.body.bounds.min.x,y:this.body.bounds.max.y+5,fillStyle:"#ff9999",fontSize:"12px",fontFamily:"monospace",textAlign:"left",textBaseline:"top"}),this.game.player&&l.distance(this.position,this.game.player.position)<this.detectionRange&&this.game.renderer.drawLine({x1:this.position.x,y1:this.position.y,x2:this.game.player.position.x,y2:this.game.player.position.y,strokeStyle:"rgba(255, 107, 107, 0.4)",lineWidth:1}))}}}class R extends u{constructor(t,e,o,n={}){var s;super(t,e,o);c(this,"name","Platform");this.visible=!!((s=t.render)!=null&&s.visible),this.setAnimation("default")}}class j extends u{constructor(t,e,o,n={}){super(t,e,o);c(this,"name","Coin");this.floatOffset=0,this.floatSpeed=2,this.floatAmount=5,this.baseY=t.position.y,this.rotation=0,this.rotationSpeed=2}update(t){this.floatOffset+=this.floatSpeed*t;const e=this.baseY+Math.sin(this.floatOffset)*this.floatAmount;this.rotation+=this.rotationSpeed*t,h.Body.setPosition(this.body,{x:this.body.position.x,y:e}),h.Body.setAngle(this.body,this.rotation)}onCollisionStart(t){t.entity&&t.entity===this.game.player&&(this.game.entities.delete(this),h.World.remove(this.game.engine.world,this.body))}}class L extends u{constructor(t,e,o,n={}){super(t,e,o);c(this,"name","Trigger");this.active=n.active||!1,this.visible=n.visible||!1,this.triggers=n.triggers||[],this.debugColor=n.debugColor||"#e7693166"}onCollisionStart(t){var e;super.onCollisionStart(t),this.active&&((e=t.entity)==null?void 0:e.name)==="Player"&&(this.category==="levelComplete"&&this.game.soundManager.playSound("levelComplete"),this.onEnter&&this.onEnter(t.entity,this.data))}onCollisionEnd(t){var e;super.onCollisionEnd(t),this.active&&((e=t.entity)==null?void 0:e.name)==="Player"&&this.onExit&&this.onExit(t.entity,this.data)}setAnimation(){}draw(){if(!this.visible)return;this.sprite&&super.draw();const t=this.body.bounds,e=t.max.x-t.min.x,o=t.max.y-t.min.y,n=this.game.renderer.worldContext;n.save(),n.fillStyle=this.debugColor,n.fillRect(this.body.position.x-e/2,this.body.position.y-o/2,e,o),n.fillStyle="#ffffffaa",n.font="14px system-ui",n.textAlign="center",n.fillText(this.triggers,this.body.position.x,this.body.position.y+3.5),n.restore()}setActive(t){this.active=t}setVisible(t){this.visible=t}onEnter(t,e){console.log("onEnter",t,e),this.game.sceneManager.switchTo("mainMenu")}}const V="/m2d-engine/assets/jump-DbRpACDv.wav",Y="/m2d-engine/assets/coin-icAG3rpw.wav",K="/m2d-engine/assets/gameover-DmpiVOiz.wav",G="/m2d-engine/assets/levelComplete-CQt4W0jU.wav",W="/m2d-engine/assets/attack-BnULeXjg.wav",q="/m2d-engine/assets/damage-BU-jNE3L.wav",$="/m2d-engine/assets/menu-BqcfDrtw.mp3",N="/m2d-engine/assets/game-C8rRGqtg.mp3",J=document.getElementById("screen"),y=new F(J,{initialScene:"mainMenu",width:1280,height:960,worldWidth:1920,worldHeight:1440,basePath:"/m2d-engine/examples/platformer/",sounds:{jump:V,coin:Y,gameOver:K,levelComplete:G,attack:W,damage:q},music:{menu:$,game:N}});[I,O,R,z,j,L].forEach(a=>{y.registerActor(a.name,a)});y.sceneManager.addScene("mainMenu",{fetch:async()=>(await w(async()=>{const{default:a}=await import("./mainMenu-CxSriBTL.js");return{default:a}},[])).default,onEnter(){y.soundManager.playMusic("menu")}});y.sceneManager.addScene("level1",{fetch:async()=>(await w(async()=>{const{default:a}=await import("./level1-CS4vdKYt.js");return{default:a}},[])).default,onEnter(){y.soundManager.playMusic("game")}});y.start();
